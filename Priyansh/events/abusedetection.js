// рдЧрд╛рд▓реА/рдЧрдВрджреЗ рд╢рдмреНрджреЛрдВ рдХреА рд▓рд┐рд╕реНрдЯ
const badwords = [
  "madarchod","behenchod","randi","chutiya","bhosdike","gandu","gaand",
  "lavde","kamina","harami","ullu","fuck","mc","bc","suar","kutta",
  "kamchor","kutti","randwa","bkl","lund","lode","lavdi","rand","chinal"
];

const warns = {}; // warning рдпрд╛рдж рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП

module.exports = {
  config: {
    name: "auto.abuse",
    eventType: ["message"],
    version: "1.0.3",
    credits: "ANURAG",
    description: "рдЧрд╛рд▓реА рдкрдХрдбрд╝рдХрд░ рдкрд╣рд▓реА рдмрд╛рд░ рдЪреЗрддрд╛рд╡рдиреА рдФрд░ рджреВрд╕рд░реА рдмрд╛рд░ рдмрд╛рд╣рд░ рдХрд░ рджреЗрдЧрд╛"
  },

  module.exports.run = async function({ api, event, Users }) {
    try {
      const { threadID, messageID, body, senderID } = event;
      if (!body) return;

      const lower = body.toLowerCase();

      // рдЧрд╛рд▓реА detect рдХрд░рдирд╛
      if (badwords.some(word => lower.includes(word))) {
        if (!warns[threadID]) warns[threadID] = {};
        if (!warns[threadID][senderID]) warns[threadID][senderID] = 0;

        warns[threadID][senderID] += 1;

        const name = await Users.getNameUser(senderID);

        if (warns[threadID][senderID] === 1) {
          return api.sendMessage(
            `тЪая╕П рдЪреЗрддрд╛рд╡рдиреА ${name}!  
рдЧрд╛рд▓реА рдпрд╛ рдЧрдВрджреЗ рд╢рдмреНрдж рдХрд╛ рдЗрд╕реНрддреЗрдорд╛рд▓ рдордд рдХрд░реЛред  
тЭЧя╕ПрдЕрдЧрд░ рджреБрдмрд╛рд░рд╛ рдХрд┐рдпрд╛ рддреЛ рддреБрдореНрд╣реЗрдВ Group рд╕реЗ рдирд┐рдХрд╛рд▓ рджрд┐рдпрд╛ рдЬрд╛рдПрдЧрд╛ред`,
            threadID,
            messageID
          );
        } else {
          api.removeUserFromGroup(senderID, threadID, (err) => {
            if (err) {
              return api.sendMessage("тЭМ рдЗрд╕ рдпреВрдЬрд╝рд░ рдХреЛ Group рд╕реЗ рд╣рдЯрд╛рдиреЗ рдореЗрдВ рджрд┐рдХреНрдХрдд рдЖрдИред", threadID);
            } else {
              return api.sendMessage(`ЁЯЪл ${name} рдиреЗ рджреЛрдмрд╛рд░рд╛ рдЧрд╛рд▓реА рджреА, рдЗрд╕рд▓рд┐рдП рдЙрд╕реЗ Group рд╕реЗ рдирд┐рдХрд╛рд▓ рджрд┐рдпрд╛ рдЧрдпрд╛!`, threadID);
            }
          });
        }
      }
    } catch (e) {
      console.log(e);
    }
  }
};
